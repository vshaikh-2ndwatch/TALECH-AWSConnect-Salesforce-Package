digraph {
	compound = "true"
	newrank = "true"
	subgraph "root" {
		"[root] aws_cloudfront_distribution.audio_recording_streaming_distribution (expand)" [label = "aws_cloudfront_distribution.audio_recording_streaming_distribution", shape = "box"]
		"[root] aws_cloudwatch_event_rule.realtime_queue_metrics_cron (expand)" [label = "aws_cloudwatch_event_rule.realtime_queue_metrics_cron", shape = "box"]
		"[root] aws_cloudwatch_event_target.step-function-state-machine (expand)" [label = "aws_cloudwatch_event_target.step-function-state-machine", shape = "box"]
		"[root] aws_iam_policy.cloud_watch_policy (expand)" [label = "aws_iam_policy.cloud_watch_policy", shape = "box"]
		"[root] aws_iam_policy.invoke_generate_audio_recording_streaming_url_policy (expand)" [label = "aws_iam_policy.invoke_generate_audio_recording_streaming_url_policy", shape = "box"]
		"[root] aws_iam_policy.kms_policy (expand)" [label = "aws_iam_policy.kms_policy", shape = "box"]
		"[root] aws_iam_policy.secretsmanager_policy (expand)" [label = "aws_iam_policy.secretsmanager_policy", shape = "box"]
		"[root] aws_iam_policy.vpc_policy (expand)" [label = "aws_iam_policy.vpc_policy", shape = "box"]
		"[root] aws_iam_role.ctr_trigger (expand)" [label = "aws_iam_role.ctr_trigger", shape = "box"]
		"[root] aws_iam_role.execute_transcription_state_machine (expand)" [label = "aws_iam_role.execute_transcription_state_machine", shape = "box"]
		"[root] aws_iam_role.get_transcribe_job_status (expand)" [label = "aws_iam_role.get_transcribe_job_status", shape = "box"]
		"[root] aws_iam_role.lambda_basic_exec (expand)" [label = "aws_iam_role.lambda_basic_exec", shape = "box"]
		"[root] aws_iam_role.lambda_basic_exec_s3read (expand)" [label = "aws_iam_role.lambda_basic_exec_s3read", shape = "box"]
		"[root] aws_iam_role.process_contactlens (expand)" [label = "aws_iam_role.process_contactlens", shape = "box"]
		"[root] aws_iam_role.process_transcription_result (expand)" [label = "aws_iam_role.process_transcription_result", shape = "box"]
		"[root] aws_iam_role.realtime_queue_metrics (expand)" [label = "aws_iam_role.realtime_queue_metrics", shape = "box"]
		"[root] aws_iam_role.realtime_queue_metrics_cron_execution (expand)" [label = "aws_iam_role.realtime_queue_metrics_cron_execution", shape = "box"]
		"[root] aws_iam_role.realtime_queue_metrics_loop_job (expand)" [label = "aws_iam_role.realtime_queue_metrics_loop_job", shape = "box"]
		"[root] aws_iam_role.realtime_queue_metrics_loop_job_state_machine (expand)" [label = "aws_iam_role.realtime_queue_metrics_loop_job_state_machine", shape = "box"]
		"[root] aws_iam_role.sig4_request_to_s3 (expand)" [label = "aws_iam_role.sig4_request_to_s3", shape = "box"]
		"[root] aws_iam_role.submit_transcribe_job (expand)" [label = "aws_iam_role.submit_transcribe_job", shape = "box"]
		"[root] aws_iam_role.transcribe_state_machine (expand)" [label = "aws_iam_role.transcribe_state_machine", shape = "box"]
		"[root] aws_iam_role_policy.ctr_trigger_kinesis_policy (expand)" [label = "aws_iam_role_policy.ctr_trigger_kinesis_policy", shape = "box"]
		"[root] aws_iam_role_policy.ctr_trigger_lambda_policy (expand)" [label = "aws_iam_role_policy.ctr_trigger_lambda_policy", shape = "box"]
		"[root] aws_iam_role_policy.execute_transcription_state_machine_invoke_api_policy (expand)" [label = "aws_iam_role_policy.execute_transcription_state_machine_invoke_api_policy", shape = "box"]
		"[root] aws_iam_role_policy.execute_transcription_state_machine_lock_s3_policy (expand)" [label = "aws_iam_role_policy.execute_transcription_state_machine_lock_s3_policy", shape = "box"]
		"[root] aws_iam_role_policy.execute_transcription_state_machine_recording_s3_policy (expand)" [label = "aws_iam_role_policy.execute_transcription_state_machine_recording_s3_policy", shape = "box"]
		"[root] aws_iam_role_policy.execute_transcription_state_machine_step_function_policy (expand)" [label = "aws_iam_role_policy.execute_transcription_state_machine_step_function_policy", shape = "box"]
		"[root] aws_iam_role_policy.get_transcribe_job_status_policy (expand)" [label = "aws_iam_role_policy.get_transcribe_job_status_policy", shape = "box"]
		"[root] aws_iam_role_policy.process_contactlens_connect_policy (expand)" [label = "aws_iam_role_policy.process_contactlens_connect_policy", shape = "box"]
		"[root] aws_iam_role_policy.process_contactlens_data_s3_policy (expand)" [label = "aws_iam_role_policy.process_contactlens_data_s3_policy", shape = "box"]
		"[root] aws_iam_role_policy.process_contactlens_invoke_api_policy (expand)" [label = "aws_iam_role_policy.process_contactlens_invoke_api_policy", shape = "box"]
		"[root] aws_iam_role_policy.process_contactlens_recording_s3_policy (expand)" [label = "aws_iam_role_policy.process_contactlens_recording_s3_policy", shape = "box"]
		"[root] aws_iam_role_policy.process_contactlens_result_s3_policy (expand)" [label = "aws_iam_role_policy.process_contactlens_result_s3_policy", shape = "box"]
		"[root] aws_iam_role_policy.process_transcription_result_comprehend_policy (expand)" [label = "aws_iam_role_policy.process_transcription_result_comprehend_policy", shape = "box"]
		"[root] aws_iam_role_policy.process_transcription_result_invoke_api_policy (expand)" [label = "aws_iam_role_policy.process_transcription_result_invoke_api_policy", shape = "box"]
		"[root] aws_iam_role_policy.process_transcription_result_s3_policy (expand)" [label = "aws_iam_role_policy.process_transcription_result_s3_policy", shape = "box"]
		"[root] aws_iam_role_policy.realtime_queue_metrics_connect_policy (expand)" [label = "aws_iam_role_policy.realtime_queue_metrics_connect_policy", shape = "box"]
		"[root] aws_iam_role_policy.realtime_queue_metrics_cron_start_step_functions_lambda_policy (expand)" [label = "aws_iam_role_policy.realtime_queue_metrics_cron_start_step_functions_lambda_policy", shape = "box"]
		"[root] aws_iam_role_policy.realtime_queue_metrics_loop_job_invoke_lambda_policy (expand)" [label = "aws_iam_role_policy.realtime_queue_metrics_loop_job_invoke_lambda_policy", shape = "box"]
		"[root] aws_iam_role_policy.realtime_queue_metrics_loop_job_state_machine_policy (expand)" [label = "aws_iam_role_policy.realtime_queue_metrics_loop_job_state_machine_policy", shape = "box"]
		"[root] aws_iam_role_policy.s3read_policy (expand)" [label = "aws_iam_role_policy.s3read_policy", shape = "box"]
		"[root] aws_iam_role_policy.sig4_request_to_s3_policy (expand)" [label = "aws_iam_role_policy.sig4_request_to_s3_policy", shape = "box"]
		"[root] aws_iam_role_policy.submit_transcribe_job_connect_recording_s3_policy (expand)" [label = "aws_iam_role_policy.submit_transcribe_job_connect_recording_s3_policy", shape = "box"]
		"[root] aws_iam_role_policy.submit_transcribe_job_output_s3_policy (expand)" [label = "aws_iam_role_policy.submit_transcribe_job_output_s3_policy", shape = "box"]
		"[root] aws_iam_role_policy.submit_transcribe_job_policy (expand)" [label = "aws_iam_role_policy.submit_transcribe_job_policy", shape = "box"]
		"[root] aws_iam_role_policy.transcribe_state_machine_policy (expand)" [label = "aws_iam_role_policy.transcribe_state_machine_policy", shape = "box"]
		"[root] aws_lambda_event_source_mapping.ctr_event_source_mapping (expand)" [label = "aws_lambda_event_source_mapping.ctr_event_source_mapping", shape = "box"]
		"[root] aws_lambda_function.contacttrace_record_lambda (expand)" [label = "aws_lambda_function.contacttrace_record_lambda", shape = "box"]
		"[root] aws_lambda_function.ctr_trigger_lambda (expand)" [label = "aws_lambda_function.ctr_trigger_lambda", shape = "box"]
		"[root] aws_lambda_function.execute_transcription_state_machine_lambda (expand)" [label = "aws_lambda_function.execute_transcription_state_machine_lambda", shape = "box"]
		"[root] aws_lambda_function.generate_audio_recording_streaming_url_lambda (expand)" [label = "aws_lambda_function.generate_audio_recording_streaming_url_lambda", shape = "box"]
		"[root] aws_lambda_function.get_transcibe_job_status_lambda (expand)" [label = "aws_lambda_function.get_transcibe_job_status_lambda", shape = "box"]
		"[root] aws_lambda_function.interval_agent_lambda (expand)" [label = "aws_lambda_function.interval_agent_lambda", shape = "box"]
		"[root] aws_lambda_function.interval_queue_lambda (expand)" [label = "aws_lambda_function.interval_queue_lambda", shape = "box"]
		"[root] aws_lambda_function.invoke_api_lambda (expand)" [label = "aws_lambda_function.invoke_api_lambda", shape = "box"]
		"[root] aws_lambda_function.process_contact_lens_lambda (expand)" [label = "aws_lambda_function.process_contact_lens_lambda", shape = "box"]
		"[root] aws_lambda_function.process_transcription_result_lambda (expand)" [label = "aws_lambda_function.process_transcription_result_lambda", shape = "box"]
		"[root] aws_lambda_function.realtime_queue_metrics_lambda (expand)" [label = "aws_lambda_function.realtime_queue_metrics_lambda", shape = "box"]
		"[root] aws_lambda_function.realtime_queue_metrics_loop_job_lambda (expand)" [label = "aws_lambda_function.realtime_queue_metrics_loop_job_lambda", shape = "box"]
		"[root] aws_lambda_function.submit_transcibe_job_lambda (expand)" [label = "aws_lambda_function.submit_transcibe_job_lambda", shape = "box"]
		"[root] aws_lambda_layer_version.sf_lambda_layer (expand)" [label = "aws_lambda_layer_version.sf_lambda_layer", shape = "box"]
		"[root] aws_sfn_state_machine.realtime_queue_metrics_loop_job_state_machine (expand)" [label = "aws_sfn_state_machine.realtime_queue_metrics_loop_job_state_machine", shape = "box"]
		"[root] aws_sfn_state_machine.transcribe_state_machine (expand)" [label = "aws_sfn_state_machine.transcribe_state_machine", shape = "box"]
		"[root] data.archive_file.contacttrace_record_lambda_package (expand)" [label = "data.archive_file.contacttrace_record_lambda_package", shape = "box"]
		"[root] data.archive_file.ctr_trigger_lambda_package (expand)" [label = "data.archive_file.ctr_trigger_lambda_package", shape = "box"]
		"[root] data.archive_file.execute_transcription_state_machine_lambda_package (expand)" [label = "data.archive_file.execute_transcription_state_machine_lambda_package", shape = "box"]
		"[root] data.archive_file.generate_audio_recording_streaming_url_lambda_package (expand)" [label = "data.archive_file.generate_audio_recording_streaming_url_lambda_package", shape = "box"]
		"[root] data.archive_file.get_transcibe_job_status_lambda_package (expand)" [label = "data.archive_file.get_transcibe_job_status_lambda_package", shape = "box"]
		"[root] data.archive_file.interval_agent_lambda_package (expand)" [label = "data.archive_file.interval_agent_lambda_package", shape = "box"]
		"[root] data.archive_file.interval_queue_lambda_package (expand)" [label = "data.archive_file.interval_queue_lambda_package", shape = "box"]
		"[root] data.archive_file.invoke_api_lambda_package (expand)" [label = "data.archive_file.invoke_api_lambda_package", shape = "box"]
		"[root] data.archive_file.lambda_site_packages_layer_package (expand)" [label = "data.archive_file.lambda_site_packages_layer_package", shape = "box"]
		"[root] data.archive_file.process_contact_lens_lambda_package (expand)" [label = "data.archive_file.process_contact_lens_lambda_package", shape = "box"]
		"[root] data.archive_file.process_transcription_result_lambda_package (expand)" [label = "data.archive_file.process_transcription_result_lambda_package", shape = "box"]
		"[root] data.archive_file.realtime_queue_metrics_lambda_package (expand)" [label = "data.archive_file.realtime_queue_metrics_lambda_package", shape = "box"]
		"[root] data.archive_file.realtime_queue_metrics_loop_job_lambda_package (expand)" [label = "data.archive_file.realtime_queue_metrics_loop_job_lambda_package", shape = "box"]
		"[root] data.archive_file.submit_transcibe_job_lambda_package (expand)" [label = "data.archive_file.submit_transcibe_job_lambda_package", shape = "box"]
		"[root] data.aws_caller_identity.current (expand)" [label = "data.aws_caller_identity.current", shape = "box"]
		"[root] data.aws_cloudfront_distribution.audio_recording_streaming_distribution (expand)" [label = "data.aws_cloudfront_distribution.audio_recording_streaming_distribution", shape = "box"]
		"[root] data.aws_iam_policy.cloud_watch_policy (expand)" [label = "data.aws_iam_policy.cloud_watch_policy", shape = "box"]
		"[root] data.aws_iam_policy.kms_policy (expand)" [label = "data.aws_iam_policy.kms_policy", shape = "box"]
		"[root] data.aws_iam_policy.secretsmanager_policy (expand)" [label = "data.aws_iam_policy.secretsmanager_policy", shape = "box"]
		"[root] data.aws_iam_policy.vpc_policy (expand)" [label = "data.aws_iam_policy.vpc_policy", shape = "box"]
		"[root] data.aws_iam_policy_document.events-assume-role-policy (expand)" [label = "data.aws_iam_policy_document.events-assume-role-policy", shape = "box"]
		"[root] data.aws_iam_policy_document.lambda-assume-role-policy (expand)" [label = "data.aws_iam_policy_document.lambda-assume-role-policy", shape = "box"]
		"[root] data.aws_iam_policy_document.lambda-edge-assume-role-policy (expand)" [label = "data.aws_iam_policy_document.lambda-edge-assume-role-policy", shape = "box"]
		"[root] data.aws_iam_policy_document.states-assume-role-policy (expand)" [label = "data.aws_iam_policy_document.states-assume-role-policy", shape = "box"]
		"[root] data.aws_iam_role.ctr_trigger (expand)" [label = "data.aws_iam_role.ctr_trigger", shape = "box"]
		"[root] data.aws_iam_role.execute_transcription_state_machine (expand)" [label = "data.aws_iam_role.execute_transcription_state_machine", shape = "box"]
		"[root] data.aws_iam_role.get_transcribe_job_status (expand)" [label = "data.aws_iam_role.get_transcribe_job_status", shape = "box"]
		"[root] data.aws_iam_role.lambda_basic_exec (expand)" [label = "data.aws_iam_role.lambda_basic_exec", shape = "box"]
		"[root] data.aws_iam_role.lambda_basic_exec_s3read (expand)" [label = "data.aws_iam_role.lambda_basic_exec_s3read", shape = "box"]
		"[root] data.aws_iam_role.process_contactlens (expand)" [label = "data.aws_iam_role.process_contactlens", shape = "box"]
		"[root] data.aws_iam_role.process_transcription_result (expand)" [label = "data.aws_iam_role.process_transcription_result", shape = "box"]
		"[root] data.aws_iam_role.realtime_queue_metrics (expand)" [label = "data.aws_iam_role.realtime_queue_metrics", shape = "box"]
		"[root] data.aws_iam_role.realtime_queue_metrics_cron_execution (expand)" [label = "data.aws_iam_role.realtime_queue_metrics_cron_execution", shape = "box"]
		"[root] data.aws_iam_role.realtime_queue_metrics_loop_job (expand)" [label = "data.aws_iam_role.realtime_queue_metrics_loop_job", shape = "box"]
		"[root] data.aws_iam_role.realtime_queue_metrics_loop_job_state_machine (expand)" [label = "data.aws_iam_role.realtime_queue_metrics_loop_job_state_machine", shape = "box"]
		"[root] data.aws_iam_role.submit_transcribe_job (expand)" [label = "data.aws_iam_role.submit_transcribe_job", shape = "box"]
		"[root] data.aws_iam_role.transcribe_state_machine (expand)" [label = "data.aws_iam_role.transcribe_state_machine", shape = "box"]
		"[root] data.aws_lambda_function.contacttrace_record_lambda (expand)" [label = "data.aws_lambda_function.contacttrace_record_lambda", shape = "box"]
		"[root] data.aws_lambda_function.execute_transcription_state_machine_lambda (expand)" [label = "data.aws_lambda_function.execute_transcription_state_machine_lambda", shape = "box"]
		"[root] data.aws_lambda_function.generate_audio_recording_streaming_url_lambda (expand)" [label = "data.aws_lambda_function.generate_audio_recording_streaming_url_lambda", shape = "box"]
		"[root] data.aws_lambda_function.get_transcibe_job_status_lambda (expand)" [label = "data.aws_lambda_function.get_transcibe_job_status_lambda", shape = "box"]
		"[root] data.aws_lambda_function.invoke_api_lambda (expand)" [label = "data.aws_lambda_function.invoke_api_lambda", shape = "box"]
		"[root] data.aws_lambda_function.process_transcription_result_lambda (expand)" [label = "data.aws_lambda_function.process_transcription_result_lambda", shape = "box"]
		"[root] data.aws_lambda_function.realtime_queue_metrics_lambda (expand)" [label = "data.aws_lambda_function.realtime_queue_metrics_lambda", shape = "box"]
		"[root] data.aws_lambda_function.realtime_queue_metrics_loop_job_lambda (expand)" [label = "data.aws_lambda_function.realtime_queue_metrics_loop_job_lambda", shape = "box"]
		"[root] data.aws_lambda_function.submit_transcibe_job_lambda (expand)" [label = "data.aws_lambda_function.submit_transcibe_job_lambda", shape = "box"]
		"[root] data.aws_region.current (expand)" [label = "data.aws_region.current", shape = "box"]
		"[root] data.aws_sfn_state_machine.realtime_queue_metrics_loop_job_state_machine (expand)" [label = "data.aws_sfn_state_machine.realtime_queue_metrics_loop_job_state_machine", shape = "box"]
		"[root] data.aws_sfn_state_machine.transcribe_state_machine (expand)" [label = "data.aws_sfn_state_machine.transcribe_state_machine", shape = "box"]
		"[root] null_resource.lambda_python_layer (expand)" [label = "null_resource.lambda_python_layer", shape = "box"]
		"[root] provider[\"registry.terraform.io/hashicorp/archive\"]" [label = "provider[\"registry.terraform.io/hashicorp/archive\"]", shape = "diamond"]
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"]" [label = "provider[\"registry.terraform.io/hashicorp/aws\"]", shape = "diamond"]
		"[root] provider[\"registry.terraform.io/hashicorp/null\"]" [label = "provider[\"registry.terraform.io/hashicorp/null\"]", shape = "diamond"]
		"[root] var.AmazonConnectInstanceId" [label = "var.AmazonConnectInstanceId", shape = "note"]
		"[root] var.AmazonConnectQueueMaxRecords" [label = "var.AmazonConnectQueueMaxRecords", shape = "note"]
		"[root] var.AmazonConnectQueueMetricsMaxRecords" [label = "var.AmazonConnectQueueMetricsMaxRecords", shape = "note"]
		"[root] var.CTREventSourceMappingMaximumRetryAttempts" [label = "var.CTREventSourceMappingMaximumRetryAttempts", shape = "note"]
		"[root] var.CTRKinesisARN" [label = "var.CTRKinesisARN", shape = "note"]
		"[root] var.ConnectRecordingS3BucketName" [label = "var.ConnectRecordingS3BucketName", shape = "note"]
		"[root] var.ConnectReportingS3BucketName" [label = "var.ConnectReportingS3BucketName", shape = "note"]
		"[root] var.ContactLensImportEnabled" [label = "var.ContactLensImportEnabled", shape = "note"]
		"[root] var.HistoricalReportingImportEnabled" [label = "var.HistoricalReportingImportEnabled", shape = "note"]
		"[root] var.LambdaLoggingLevel" [label = "var.LambdaLoggingLevel", shape = "note"]
		"[root] var.PostcallCTRImportEnabled" [label = "var.PostcallCTRImportEnabled", shape = "note"]
		"[root] var.PostcallRecordingImportEnabled" [label = "var.PostcallRecordingImportEnabled", shape = "note"]
		"[root] var.PostcallTranscribeEnabled" [label = "var.PostcallTranscribeEnabled", shape = "note"]
		"[root] var.PrivateVpcEnabled" [label = "var.PrivateVpcEnabled", shape = "note"]
		"[root] var.RealtimeReportingImportEnabled" [label = "var.RealtimeReportingImportEnabled", shape = "note"]
		"[root] var.SalesforceAdapterNamespace" [label = "var.SalesforceAdapterNamespace", shape = "note"]
		"[root] var.SalesforceCredentialsKMSKeyARN" [label = "var.SalesforceCredentialsKMSKeyARN", shape = "note"]
		"[root] var.SalesforceCredentialsSecretsManagerARN" [label = "var.SalesforceCredentialsSecretsManagerARN", shape = "note"]
		"[root] var.SalesforceHost" [label = "var.SalesforceHost", shape = "note"]
		"[root] var.SalesforceProduction" [label = "var.SalesforceProduction", shape = "note"]
		"[root] var.SalesforceUsername" [label = "var.SalesforceUsername", shape = "note"]
		"[root] var.SalesforceVersion" [label = "var.SalesforceVersion", shape = "note"]
		"[root] var.TranscribeOutputS3BucketName" [label = "var.TranscribeOutputS3BucketName", shape = "note"]
		"[root] var.TranscriptionJobCheckWaitTime" [label = "var.TranscriptionJobCheckWaitTime", shape = "note"]
		"[root] var.VpcSecurityGroupList" [label = "var.VpcSecurityGroupList", shape = "note"]
		"[root] var.VpcSubnetList" [label = "var.VpcSubnetList", shape = "note"]
		"[root] aws_cloudfront_distribution.audio_recording_streaming_distribution (expand)" -> "[root] data.aws_region.current (expand)"
		"[root] aws_cloudfront_distribution.audio_recording_streaming_distribution (expand)" -> "[root] local.PostcallRecordingImportEnabledCondition (expand)"
		"[root] aws_cloudfront_distribution.audio_recording_streaming_distribution (expand)" -> "[root] var.ConnectRecordingS3BucketName"
		"[root] aws_cloudfront_distribution.audio_recording_streaming_distribution (expand)" -> "[root] var.SalesforceHost"
		"[root] aws_cloudwatch_event_rule.realtime_queue_metrics_cron (expand)" -> "[root] local.RealtimeReportingImportEnabledCondition (expand)"
		"[root] aws_cloudwatch_event_rule.realtime_queue_metrics_cron (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] aws_cloudwatch_event_target.step-function-state-machine (expand)" -> "[root] aws_cloudwatch_event_rule.realtime_queue_metrics_cron (expand)"
		"[root] aws_cloudwatch_event_target.step-function-state-machine (expand)" -> "[root] data.aws_iam_role.realtime_queue_metrics_cron_execution (expand)"
		"[root] aws_cloudwatch_event_target.step-function-state-machine (expand)" -> "[root] data.aws_sfn_state_machine.realtime_queue_metrics_loop_job_state_machine (expand)"
		"[root] aws_iam_policy.cloud_watch_policy (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] aws_iam_policy.invoke_generate_audio_recording_streaming_url_policy (expand)" -> "[root] data.aws_lambda_function.generate_audio_recording_streaming_url_lambda (expand)"
		"[root] aws_iam_policy.kms_policy (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] aws_iam_policy.kms_policy (expand)" -> "[root] var.SalesforceCredentialsKMSKeyARN"
		"[root] aws_iam_policy.secretsmanager_policy (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] aws_iam_policy.secretsmanager_policy (expand)" -> "[root] var.SalesforceCredentialsSecretsManagerARN"
		"[root] aws_iam_policy.vpc_policy (expand)" -> "[root] local.PrivateVpcEnabledCondition (expand)"
		"[root] aws_iam_policy.vpc_policy (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] aws_iam_role.ctr_trigger (expand)" -> "[root] data.aws_iam_policy.cloud_watch_policy (expand)"
		"[root] aws_iam_role.ctr_trigger (expand)" -> "[root] data.aws_iam_policy_document.lambda-assume-role-policy (expand)"
		"[root] aws_iam_role.execute_transcription_state_machine (expand)" -> "[root] data.aws_iam_policy.cloud_watch_policy (expand)"
		"[root] aws_iam_role.execute_transcription_state_machine (expand)" -> "[root] data.aws_iam_policy_document.lambda-assume-role-policy (expand)"
		"[root] aws_iam_role.get_transcribe_job_status (expand)" -> "[root] data.aws_iam_policy.cloud_watch_policy (expand)"
		"[root] aws_iam_role.get_transcribe_job_status (expand)" -> "[root] data.aws_iam_policy_document.lambda-assume-role-policy (expand)"
		"[root] aws_iam_role.lambda_basic_exec (expand)" -> "[root] data.aws_iam_policy_document.lambda-assume-role-policy (expand)"
		"[root] aws_iam_role.lambda_basic_exec (expand)" -> "[root] local.Managed_Policies_Based_on_VPC (expand)"
		"[root] aws_iam_role.lambda_basic_exec_s3read (expand)" -> "[root] data.aws_iam_policy_document.lambda-assume-role-policy (expand)"
		"[root] aws_iam_role.lambda_basic_exec_s3read (expand)" -> "[root] local.Managed_Policies_Based_on_VPC (expand)"
		"[root] aws_iam_role.process_contactlens (expand)" -> "[root] data.aws_iam_policy.cloud_watch_policy (expand)"
		"[root] aws_iam_role.process_contactlens (expand)" -> "[root] data.aws_iam_policy_document.lambda-assume-role-policy (expand)"
		"[root] aws_iam_role.process_transcription_result (expand)" -> "[root] data.aws_iam_policy.cloud_watch_policy (expand)"
		"[root] aws_iam_role.process_transcription_result (expand)" -> "[root] data.aws_iam_policy_document.lambda-assume-role-policy (expand)"
		"[root] aws_iam_role.realtime_queue_metrics (expand)" -> "[root] data.aws_iam_policy_document.lambda-assume-role-policy (expand)"
		"[root] aws_iam_role.realtime_queue_metrics (expand)" -> "[root] local.Managed_Policies_Based_on_VPC (expand)"
		"[root] aws_iam_role.realtime_queue_metrics_cron_execution (expand)" -> "[root] data.aws_iam_policy_document.events-assume-role-policy (expand)"
		"[root] aws_iam_role.realtime_queue_metrics_loop_job (expand)" -> "[root] data.aws_iam_policy.cloud_watch_policy (expand)"
		"[root] aws_iam_role.realtime_queue_metrics_loop_job (expand)" -> "[root] data.aws_iam_policy_document.lambda-assume-role-policy (expand)"
		"[root] aws_iam_role.realtime_queue_metrics_loop_job_state_machine (expand)" -> "[root] data.aws_iam_policy_document.states-assume-role-policy (expand)"
		"[root] aws_iam_role.sig4_request_to_s3 (expand)" -> "[root] data.aws_iam_policy.cloud_watch_policy (expand)"
		"[root] aws_iam_role.sig4_request_to_s3 (expand)" -> "[root] data.aws_iam_policy_document.lambda-edge-assume-role-policy (expand)"
		"[root] aws_iam_role.submit_transcribe_job (expand)" -> "[root] data.aws_iam_policy.cloud_watch_policy (expand)"
		"[root] aws_iam_role.submit_transcribe_job (expand)" -> "[root] data.aws_iam_policy_document.lambda-assume-role-policy (expand)"
		"[root] aws_iam_role.transcribe_state_machine (expand)" -> "[root] data.aws_iam_policy_document.states-assume-role-policy (expand)"
		"[root] aws_iam_role_policy.ctr_trigger_kinesis_policy (expand)" -> "[root] aws_iam_role.ctr_trigger (expand)"
		"[root] aws_iam_role_policy.ctr_trigger_kinesis_policy (expand)" -> "[root] local.CTREventSourceMappingCondition (expand)"
		"[root] aws_iam_role_policy.ctr_trigger_kinesis_policy (expand)" -> "[root] var.CTRKinesisARN"
		"[root] aws_iam_role_policy.ctr_trigger_lambda_policy (expand)" -> "[root] aws_iam_role.ctr_trigger (expand)"
		"[root] aws_iam_role_policy.ctr_trigger_lambda_policy (expand)" -> "[root] data.aws_lambda_function.contacttrace_record_lambda (expand)"
		"[root] aws_iam_role_policy.ctr_trigger_lambda_policy (expand)" -> "[root] data.aws_lambda_function.execute_transcription_state_machine_lambda (expand)"
		"[root] aws_iam_role_policy.execute_transcription_state_machine_invoke_api_policy (expand)" -> "[root] aws_iam_role.execute_transcription_state_machine (expand)"
		"[root] aws_iam_role_policy.execute_transcription_state_machine_invoke_api_policy (expand)" -> "[root] data.aws_lambda_function.invoke_api_lambda (expand)"
		"[root] aws_iam_role_policy.execute_transcription_state_machine_lock_s3_policy (expand)" -> "[root] aws_iam_role.execute_transcription_state_machine (expand)"
		"[root] aws_iam_role_policy.execute_transcription_state_machine_lock_s3_policy (expand)" -> "[root] local.PostcallTranscribeRecordingImportEnabledCondition (expand)"
		"[root] aws_iam_role_policy.execute_transcription_state_machine_lock_s3_policy (expand)" -> "[root] var.TranscribeOutputS3BucketName"
		"[root] aws_iam_role_policy.execute_transcription_state_machine_recording_s3_policy (expand)" -> "[root] aws_iam_role.execute_transcription_state_machine (expand)"
		"[root] aws_iam_role_policy.execute_transcription_state_machine_recording_s3_policy (expand)" -> "[root] local.PostcallRecordingImportEnabledCondition (expand)"
		"[root] aws_iam_role_policy.execute_transcription_state_machine_recording_s3_policy (expand)" -> "[root] var.ConnectRecordingS3BucketName"
		"[root] aws_iam_role_policy.execute_transcription_state_machine_step_function_policy (expand)" -> "[root] aws_iam_role.execute_transcription_state_machine (expand)"
		"[root] aws_iam_role_policy.execute_transcription_state_machine_step_function_policy (expand)" -> "[root] data.aws_sfn_state_machine.transcribe_state_machine (expand)"
		"[root] aws_iam_role_policy.get_transcribe_job_status_policy (expand)" -> "[root] aws_iam_role.get_transcribe_job_status (expand)"
		"[root] aws_iam_role_policy.process_contactlens_connect_policy (expand)" -> "[root] aws_iam_role.process_contactlens (expand)"
		"[root] aws_iam_role_policy.process_contactlens_connect_policy (expand)" -> "[root] data.aws_caller_identity.current (expand)"
		"[root] aws_iam_role_policy.process_contactlens_connect_policy (expand)" -> "[root] data.aws_region.current (expand)"
		"[root] aws_iam_role_policy.process_contactlens_connect_policy (expand)" -> "[root] local.ContactLensImportEnabledCondition (expand)"
		"[root] aws_iam_role_policy.process_contactlens_connect_policy (expand)" -> "[root] var.AmazonConnectInstanceId"
		"[root] aws_iam_role_policy.process_contactlens_data_s3_policy (expand)" -> "[root] aws_iam_role.process_contactlens (expand)"
		"[root] aws_iam_role_policy.process_contactlens_data_s3_policy (expand)" -> "[root] local.ContactLensImportEnabledCondition (expand)"
		"[root] aws_iam_role_policy.process_contactlens_data_s3_policy (expand)" -> "[root] var.ConnectRecordingS3BucketName"
		"[root] aws_iam_role_policy.process_contactlens_invoke_api_policy (expand)" -> "[root] aws_iam_role.process_contactlens (expand)"
		"[root] aws_iam_role_policy.process_contactlens_invoke_api_policy (expand)" -> "[root] data.aws_lambda_function.invoke_api_lambda (expand)"
		"[root] aws_iam_role_policy.process_contactlens_recording_s3_policy (expand)" -> "[root] aws_iam_role.process_contactlens (expand)"
		"[root] aws_iam_role_policy.process_contactlens_recording_s3_policy (expand)" -> "[root] local.ContactLensImportEnabledCondition (expand)"
		"[root] aws_iam_role_policy.process_contactlens_recording_s3_policy (expand)" -> "[root] var.AmazonConnectInstanceId"
		"[root] aws_iam_role_policy.process_contactlens_recording_s3_policy (expand)" -> "[root] var.ConnectRecordingS3BucketName"
		"[root] aws_iam_role_policy.process_contactlens_result_s3_policy (expand)" -> "[root] aws_iam_role.process_contactlens (expand)"
		"[root] aws_iam_role_policy.process_contactlens_result_s3_policy (expand)" -> "[root] local.ContactLensImportEnabledCondition (expand)"
		"[root] aws_iam_role_policy.process_contactlens_result_s3_policy (expand)" -> "[root] var.TranscribeOutputS3BucketName"
		"[root] aws_iam_role_policy.process_transcription_result_comprehend_policy (expand)" -> "[root] aws_iam_role.process_transcription_result (expand)"
		"[root] aws_iam_role_policy.process_transcription_result_invoke_api_policy (expand)" -> "[root] aws_iam_role.process_transcription_result (expand)"
		"[root] aws_iam_role_policy.process_transcription_result_invoke_api_policy (expand)" -> "[root] data.aws_lambda_function.invoke_api_lambda (expand)"
		"[root] aws_iam_role_policy.process_transcription_result_s3_policy (expand)" -> "[root] aws_iam_role.process_transcription_result (expand)"
		"[root] aws_iam_role_policy.process_transcription_result_s3_policy (expand)" -> "[root] local.PostcallTranscribeEnabledCondition (expand)"
		"[root] aws_iam_role_policy.process_transcription_result_s3_policy (expand)" -> "[root] var.TranscribeOutputS3BucketName"
		"[root] aws_iam_role_policy.realtime_queue_metrics_connect_policy (expand)" -> "[root] aws_iam_role.realtime_queue_metrics (expand)"
		"[root] aws_iam_role_policy.realtime_queue_metrics_connect_policy (expand)" -> "[root] data.aws_caller_identity.current (expand)"
		"[root] aws_iam_role_policy.realtime_queue_metrics_connect_policy (expand)" -> "[root] data.aws_region.current (expand)"
		"[root] aws_iam_role_policy.realtime_queue_metrics_connect_policy (expand)" -> "[root] local.RealtimeReportingImportEnabledCondition (expand)"
		"[root] aws_iam_role_policy.realtime_queue_metrics_connect_policy (expand)" -> "[root] var.AmazonConnectInstanceId"
		"[root] aws_iam_role_policy.realtime_queue_metrics_cron_start_step_functions_lambda_policy (expand)" -> "[root] aws_iam_role.realtime_queue_metrics_cron_execution (expand)"
		"[root] aws_iam_role_policy.realtime_queue_metrics_cron_start_step_functions_lambda_policy (expand)" -> "[root] data.aws_sfn_state_machine.realtime_queue_metrics_loop_job_state_machine (expand)"
		"[root] aws_iam_role_policy.realtime_queue_metrics_loop_job_invoke_lambda_policy (expand)" -> "[root] aws_iam_role.realtime_queue_metrics_loop_job (expand)"
		"[root] aws_iam_role_policy.realtime_queue_metrics_loop_job_invoke_lambda_policy (expand)" -> "[root] data.aws_lambda_function.realtime_queue_metrics_lambda (expand)"
		"[root] aws_iam_role_policy.realtime_queue_metrics_loop_job_state_machine_policy (expand)" -> "[root] aws_iam_role.realtime_queue_metrics_loop_job_state_machine (expand)"
		"[root] aws_iam_role_policy.realtime_queue_metrics_loop_job_state_machine_policy (expand)" -> "[root] data.aws_lambda_function.realtime_queue_metrics_loop_job_lambda (expand)"
		"[root] aws_iam_role_policy.s3read_policy (expand)" -> "[root] aws_iam_role.lambda_basic_exec_s3read (expand)"
		"[root] aws_iam_role_policy.s3read_policy (expand)" -> "[root] local.HistoricalReportingImportEnabledCondition (expand)"
		"[root] aws_iam_role_policy.s3read_policy (expand)" -> "[root] var.ConnectReportingS3BucketName"
		"[root] aws_iam_role_policy.sig4_request_to_s3_policy (expand)" -> "[root] aws_iam_role.sig4_request_to_s3 (expand)"
		"[root] aws_iam_role_policy.sig4_request_to_s3_policy (expand)" -> "[root] var.ConnectRecordingS3BucketName"
		"[root] aws_iam_role_policy.submit_transcribe_job_connect_recording_s3_policy (expand)" -> "[root] aws_iam_role.submit_transcribe_job (expand)"
		"[root] aws_iam_role_policy.submit_transcribe_job_connect_recording_s3_policy (expand)" -> "[root] local.PostcallTranscribeEnabledCondition (expand)"
		"[root] aws_iam_role_policy.submit_transcribe_job_connect_recording_s3_policy (expand)" -> "[root] var.ConnectRecordingS3BucketName"
		"[root] aws_iam_role_policy.submit_transcribe_job_output_s3_policy (expand)" -> "[root] aws_iam_role.submit_transcribe_job (expand)"
		"[root] aws_iam_role_policy.submit_transcribe_job_output_s3_policy (expand)" -> "[root] local.PostcallTranscribeEnabledCondition (expand)"
		"[root] aws_iam_role_policy.submit_transcribe_job_output_s3_policy (expand)" -> "[root] var.TranscribeOutputS3BucketName"
		"[root] aws_iam_role_policy.submit_transcribe_job_policy (expand)" -> "[root] aws_iam_role.submit_transcribe_job (expand)"
		"[root] aws_iam_role_policy.transcribe_state_machine_policy (expand)" -> "[root] aws_iam_role.transcribe_state_machine (expand)"
		"[root] aws_iam_role_policy.transcribe_state_machine_policy (expand)" -> "[root] data.aws_lambda_function.get_transcibe_job_status_lambda (expand)"
		"[root] aws_iam_role_policy.transcribe_state_machine_policy (expand)" -> "[root] data.aws_lambda_function.process_transcription_result_lambda (expand)"
		"[root] aws_iam_role_policy.transcribe_state_machine_policy (expand)" -> "[root] data.aws_lambda_function.submit_transcibe_job_lambda (expand)"
		"[root] aws_lambda_event_source_mapping.ctr_event_source_mapping (expand)" -> "[root] aws_lambda_function.ctr_trigger_lambda (expand)"
		"[root] aws_lambda_event_source_mapping.ctr_event_source_mapping (expand)" -> "[root] local.CTREventSourceMappingCondition (expand)"
		"[root] aws_lambda_event_source_mapping.ctr_event_source_mapping (expand)" -> "[root] var.CTREventSourceMappingMaximumRetryAttempts"
		"[root] aws_lambda_event_source_mapping.ctr_event_source_mapping (expand)" -> "[root] var.CTRKinesisARN"
		"[root] aws_lambda_function.contacttrace_record_lambda (expand)" -> "[root] aws_lambda_layer_version.sf_lambda_layer (expand)"
		"[root] aws_lambda_function.contacttrace_record_lambda (expand)" -> "[root] data.archive_file.contacttrace_record_lambda_package (expand)"
		"[root] aws_lambda_function.contacttrace_record_lambda (expand)" -> "[root] data.aws_iam_role.lambda_basic_exec (expand)"
		"[root] aws_lambda_function.contacttrace_record_lambda (expand)" -> "[root] local.LambdaSecurityGroupIds (expand)"
		"[root] aws_lambda_function.contacttrace_record_lambda (expand)" -> "[root] local.LambdaSubnetIds (expand)"
		"[root] aws_lambda_function.contacttrace_record_lambda (expand)" -> "[root] var.LambdaLoggingLevel"
		"[root] aws_lambda_function.contacttrace_record_lambda (expand)" -> "[root] var.SalesforceAdapterNamespace"
		"[root] aws_lambda_function.contacttrace_record_lambda (expand)" -> "[root] var.SalesforceHost"
		"[root] aws_lambda_function.contacttrace_record_lambda (expand)" -> "[root] var.SalesforceProduction"
		"[root] aws_lambda_function.contacttrace_record_lambda (expand)" -> "[root] var.SalesforceUsername"
		"[root] aws_lambda_function.contacttrace_record_lambda (expand)" -> "[root] var.SalesforceVersion"
		"[root] aws_lambda_function.ctr_trigger_lambda (expand)" -> "[root] aws_lambda_function.contacttrace_record_lambda (expand)"
		"[root] aws_lambda_function.ctr_trigger_lambda (expand)" -> "[root] aws_lambda_function.execute_transcription_state_machine_lambda (expand)"
		"[root] aws_lambda_function.ctr_trigger_lambda (expand)" -> "[root] data.archive_file.ctr_trigger_lambda_package (expand)"
		"[root] aws_lambda_function.ctr_trigger_lambda (expand)" -> "[root] data.aws_iam_role.ctr_trigger (expand)"
		"[root] aws_lambda_function.ctr_trigger_lambda (expand)" -> "[root] var.PostcallCTRImportEnabled"
		"[root] aws_lambda_function.ctr_trigger_lambda (expand)" -> "[root] var.PostcallRecordingImportEnabled"
		"[root] aws_lambda_function.ctr_trigger_lambda (expand)" -> "[root] var.PostcallTranscribeEnabled"
		"[root] aws_lambda_function.execute_transcription_state_machine_lambda (expand)" -> "[root] data.archive_file.execute_transcription_state_machine_lambda_package (expand)"
		"[root] aws_lambda_function.execute_transcription_state_machine_lambda (expand)" -> "[root] data.aws_iam_role.execute_transcription_state_machine (expand)"
		"[root] aws_lambda_function.execute_transcription_state_machine_lambda (expand)" -> "[root] data.aws_sfn_state_machine.transcribe_state_machine (expand)"
		"[root] aws_lambda_function.execute_transcription_state_machine_lambda (expand)" -> "[root] var.TranscribeOutputS3BucketName"
		"[root] aws_lambda_function.execute_transcription_state_machine_lambda (expand)" -> "[root] var.TranscriptionJobCheckWaitTime"
		"[root] aws_lambda_function.generate_audio_recording_streaming_url_lambda (expand)" -> "[root] aws_lambda_layer_version.sf_lambda_layer (expand)"
		"[root] aws_lambda_function.generate_audio_recording_streaming_url_lambda (expand)" -> "[root] data.archive_file.generate_audio_recording_streaming_url_lambda_package (expand)"
		"[root] aws_lambda_function.generate_audio_recording_streaming_url_lambda (expand)" -> "[root] data.aws_iam_role.lambda_basic_exec (expand)"
		"[root] aws_lambda_function.generate_audio_recording_streaming_url_lambda (expand)" -> "[root] local.CloudFront_Distribution_Domain_Name (expand)"
		"[root] aws_lambda_function.generate_audio_recording_streaming_url_lambda (expand)" -> "[root] var.LambdaLoggingLevel"
		"[root] aws_lambda_function.get_transcibe_job_status_lambda (expand)" -> "[root] aws_lambda_layer_version.sf_lambda_layer (expand)"
		"[root] aws_lambda_function.get_transcibe_job_status_lambda (expand)" -> "[root] data.archive_file.get_transcibe_job_status_lambda_package (expand)"
		"[root] aws_lambda_function.get_transcibe_job_status_lambda (expand)" -> "[root] data.aws_iam_role.get_transcribe_job_status (expand)"
		"[root] aws_lambda_function.get_transcibe_job_status_lambda (expand)" -> "[root] var.LambdaLoggingLevel"
		"[root] aws_lambda_function.interval_agent_lambda (expand)" -> "[root] aws_lambda_layer_version.sf_lambda_layer (expand)"
		"[root] aws_lambda_function.interval_agent_lambda (expand)" -> "[root] data.archive_file.interval_agent_lambda_package (expand)"
		"[root] aws_lambda_function.interval_agent_lambda (expand)" -> "[root] data.aws_iam_role.lambda_basic_exec_s3read (expand)"
		"[root] aws_lambda_function.interval_agent_lambda (expand)" -> "[root] local.LambdaSecurityGroupIds (expand)"
		"[root] aws_lambda_function.interval_agent_lambda (expand)" -> "[root] local.LambdaSubnetIds (expand)"
		"[root] aws_lambda_function.interval_agent_lambda (expand)" -> "[root] var.LambdaLoggingLevel"
		"[root] aws_lambda_function.interval_agent_lambda (expand)" -> "[root] var.SalesforceAdapterNamespace"
		"[root] aws_lambda_function.interval_agent_lambda (expand)" -> "[root] var.SalesforceHost"
		"[root] aws_lambda_function.interval_agent_lambda (expand)" -> "[root] var.SalesforceProduction"
		"[root] aws_lambda_function.interval_agent_lambda (expand)" -> "[root] var.SalesforceUsername"
		"[root] aws_lambda_function.interval_agent_lambda (expand)" -> "[root] var.SalesforceVersion"
		"[root] aws_lambda_function.interval_queue_lambda (expand)" -> "[root] aws_lambda_layer_version.sf_lambda_layer (expand)"
		"[root] aws_lambda_function.interval_queue_lambda (expand)" -> "[root] data.archive_file.interval_queue_lambda_package (expand)"
		"[root] aws_lambda_function.interval_queue_lambda (expand)" -> "[root] data.aws_iam_role.lambda_basic_exec_s3read (expand)"
		"[root] aws_lambda_function.interval_queue_lambda (expand)" -> "[root] local.LambdaSecurityGroupIds (expand)"
		"[root] aws_lambda_function.interval_queue_lambda (expand)" -> "[root] local.LambdaSubnetIds (expand)"
		"[root] aws_lambda_function.interval_queue_lambda (expand)" -> "[root] var.LambdaLoggingLevel"
		"[root] aws_lambda_function.interval_queue_lambda (expand)" -> "[root] var.SalesforceAdapterNamespace"
		"[root] aws_lambda_function.interval_queue_lambda (expand)" -> "[root] var.SalesforceHost"
		"[root] aws_lambda_function.interval_queue_lambda (expand)" -> "[root] var.SalesforceProduction"
		"[root] aws_lambda_function.interval_queue_lambda (expand)" -> "[root] var.SalesforceUsername"
		"[root] aws_lambda_function.interval_queue_lambda (expand)" -> "[root] var.SalesforceVersion"
		"[root] aws_lambda_function.invoke_api_lambda (expand)" -> "[root] aws_lambda_layer_version.sf_lambda_layer (expand)"
		"[root] aws_lambda_function.invoke_api_lambda (expand)" -> "[root] data.archive_file.invoke_api_lambda_package (expand)"
		"[root] aws_lambda_function.invoke_api_lambda (expand)" -> "[root] data.aws_iam_role.lambda_basic_exec (expand)"
		"[root] aws_lambda_function.invoke_api_lambda (expand)" -> "[root] local.LambdaSecurityGroupIds (expand)"
		"[root] aws_lambda_function.invoke_api_lambda (expand)" -> "[root] local.LambdaSubnetIds (expand)"
		"[root] aws_lambda_function.invoke_api_lambda (expand)" -> "[root] var.LambdaLoggingLevel"
		"[root] aws_lambda_function.invoke_api_lambda (expand)" -> "[root] var.SalesforceAdapterNamespace"
		"[root] aws_lambda_function.invoke_api_lambda (expand)" -> "[root] var.SalesforceHost"
		"[root] aws_lambda_function.invoke_api_lambda (expand)" -> "[root] var.SalesforceProduction"
		"[root] aws_lambda_function.invoke_api_lambda (expand)" -> "[root] var.SalesforceUsername"
		"[root] aws_lambda_function.invoke_api_lambda (expand)" -> "[root] var.SalesforceVersion"
		"[root] aws_lambda_function.process_contact_lens_lambda (expand)" -> "[root] aws_lambda_function.invoke_api_lambda (expand)"
		"[root] aws_lambda_function.process_contact_lens_lambda (expand)" -> "[root] data.archive_file.process_contact_lens_lambda_package (expand)"
		"[root] aws_lambda_function.process_contact_lens_lambda (expand)" -> "[root] data.aws_iam_role.process_contactlens (expand)"
		"[root] aws_lambda_function.process_contact_lens_lambda (expand)" -> "[root] var.AmazonConnectInstanceId"
		"[root] aws_lambda_function.process_contact_lens_lambda (expand)" -> "[root] var.ContactLensImportEnabled"
		"[root] aws_lambda_function.process_contact_lens_lambda (expand)" -> "[root] var.TranscribeOutputS3BucketName"
		"[root] aws_lambda_function.process_transcription_result_lambda (expand)" -> "[root] aws_lambda_function.invoke_api_lambda (expand)"
		"[root] aws_lambda_function.process_transcription_result_lambda (expand)" -> "[root] data.archive_file.process_transcription_result_lambda_package (expand)"
		"[root] aws_lambda_function.process_transcription_result_lambda (expand)" -> "[root] data.aws_iam_role.process_transcription_result (expand)"
		"[root] aws_lambda_function.realtime_queue_metrics_lambda (expand)" -> "[root] aws_lambda_layer_version.sf_lambda_layer (expand)"
		"[root] aws_lambda_function.realtime_queue_metrics_lambda (expand)" -> "[root] data.archive_file.realtime_queue_metrics_lambda_package (expand)"
		"[root] aws_lambda_function.realtime_queue_metrics_lambda (expand)" -> "[root] data.aws_iam_role.realtime_queue_metrics (expand)"
		"[root] aws_lambda_function.realtime_queue_metrics_lambda (expand)" -> "[root] local.LambdaSecurityGroupIds (expand)"
		"[root] aws_lambda_function.realtime_queue_metrics_lambda (expand)" -> "[root] local.LambdaSubnetIds (expand)"
		"[root] aws_lambda_function.realtime_queue_metrics_lambda (expand)" -> "[root] var.AmazonConnectInstanceId"
		"[root] aws_lambda_function.realtime_queue_metrics_lambda (expand)" -> "[root] var.AmazonConnectQueueMaxRecords"
		"[root] aws_lambda_function.realtime_queue_metrics_lambda (expand)" -> "[root] var.AmazonConnectQueueMetricsMaxRecords"
		"[root] aws_lambda_function.realtime_queue_metrics_lambda (expand)" -> "[root] var.LambdaLoggingLevel"
		"[root] aws_lambda_function.realtime_queue_metrics_lambda (expand)" -> "[root] var.SalesforceAdapterNamespace"
		"[root] aws_lambda_function.realtime_queue_metrics_lambda (expand)" -> "[root] var.SalesforceHost"
		"[root] aws_lambda_function.realtime_queue_metrics_lambda (expand)" -> "[root] var.SalesforceProduction"
		"[root] aws_lambda_function.realtime_queue_metrics_lambda (expand)" -> "[root] var.SalesforceUsername"
		"[root] aws_lambda_function.realtime_queue_metrics_lambda (expand)" -> "[root] var.SalesforceVersion"
		"[root] aws_lambda_function.realtime_queue_metrics_loop_job_lambda (expand)" -> "[root] aws_lambda_function.realtime_queue_metrics_lambda (expand)"
		"[root] aws_lambda_function.realtime_queue_metrics_loop_job_lambda (expand)" -> "[root] data.archive_file.realtime_queue_metrics_loop_job_lambda_package (expand)"
		"[root] aws_lambda_function.realtime_queue_metrics_loop_job_lambda (expand)" -> "[root] data.aws_iam_role.realtime_queue_metrics_loop_job (expand)"
		"[root] aws_lambda_function.submit_transcibe_job_lambda (expand)" -> "[root] aws_lambda_layer_version.sf_lambda_layer (expand)"
		"[root] aws_lambda_function.submit_transcibe_job_lambda (expand)" -> "[root] data.archive_file.submit_transcibe_job_lambda_package (expand)"
		"[root] aws_lambda_function.submit_transcibe_job_lambda (expand)" -> "[root] data.aws_iam_role.submit_transcribe_job (expand)"
		"[root] aws_lambda_function.submit_transcibe_job_lambda (expand)" -> "[root] var.LambdaLoggingLevel"
		"[root] aws_lambda_layer_version.sf_lambda_layer (expand)" -> "[root] data.archive_file.lambda_site_packages_layer_package (expand)"
		"[root] aws_lambda_layer_version.sf_lambda_layer (expand)" -> "[root] local.LambdaRuntime (expand)"
		"[root] aws_lambda_layer_version.sf_lambda_layer (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] aws_sfn_state_machine.realtime_queue_metrics_loop_job_state_machine (expand)" -> "[root] data.aws_iam_role.realtime_queue_metrics_loop_job_state_machine (expand)"
		"[root] aws_sfn_state_machine.realtime_queue_metrics_loop_job_state_machine (expand)" -> "[root] data.aws_lambda_function.realtime_queue_metrics_loop_job_lambda (expand)"
		"[root] aws_sfn_state_machine.transcribe_state_machine (expand)" -> "[root] data.aws_iam_role.transcribe_state_machine (expand)"
		"[root] aws_sfn_state_machine.transcribe_state_machine (expand)" -> "[root] data.aws_lambda_function.get_transcibe_job_status_lambda (expand)"
		"[root] aws_sfn_state_machine.transcribe_state_machine (expand)" -> "[root] data.aws_lambda_function.process_transcription_result_lambda (expand)"
		"[root] aws_sfn_state_machine.transcribe_state_machine (expand)" -> "[root] data.aws_lambda_function.submit_transcibe_job_lambda (expand)"
		"[root] data.archive_file.contacttrace_record_lambda_package (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/archive\"]"
		"[root] data.archive_file.ctr_trigger_lambda_package (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/archive\"]"
		"[root] data.archive_file.execute_transcription_state_machine_lambda_package (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/archive\"]"
		"[root] data.archive_file.generate_audio_recording_streaming_url_lambda_package (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/archive\"]"
		"[root] data.archive_file.get_transcibe_job_status_lambda_package (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/archive\"]"
		"[root] data.archive_file.interval_agent_lambda_package (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/archive\"]"
		"[root] data.archive_file.interval_queue_lambda_package (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/archive\"]"
		"[root] data.archive_file.invoke_api_lambda_package (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/archive\"]"
		"[root] data.archive_file.lambda_site_packages_layer_package (expand)" -> "[root] local.lambda_site_packages_layer_zip_name (expand)"
		"[root] data.archive_file.lambda_site_packages_layer_package (expand)" -> "[root] null_resource.lambda_python_layer (expand)"
		"[root] data.archive_file.lambda_site_packages_layer_package (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/archive\"]"
		"[root] data.archive_file.process_contact_lens_lambda_package (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/archive\"]"
		"[root] data.archive_file.process_transcription_result_lambda_package (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/archive\"]"
		"[root] data.archive_file.realtime_queue_metrics_lambda_package (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/archive\"]"
		"[root] data.archive_file.realtime_queue_metrics_loop_job_lambda_package (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/archive\"]"
		"[root] data.archive_file.submit_transcibe_job_lambda_package (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/archive\"]"
		"[root] data.aws_caller_identity.current (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] data.aws_cloudfront_distribution.audio_recording_streaming_distribution (expand)" -> "[root] aws_cloudfront_distribution.audio_recording_streaming_distribution (expand)"
		"[root] data.aws_iam_policy.cloud_watch_policy (expand)" -> "[root] aws_iam_policy.cloud_watch_policy (expand)"
		"[root] data.aws_iam_policy.kms_policy (expand)" -> "[root] aws_iam_policy.kms_policy (expand)"
		"[root] data.aws_iam_policy.secretsmanager_policy (expand)" -> "[root] aws_iam_policy.secretsmanager_policy (expand)"
		"[root] data.aws_iam_policy.vpc_policy (expand)" -> "[root] aws_iam_policy.vpc_policy (expand)"
		"[root] data.aws_iam_policy_document.events-assume-role-policy (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] data.aws_iam_policy_document.lambda-assume-role-policy (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] data.aws_iam_policy_document.lambda-edge-assume-role-policy (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] data.aws_iam_policy_document.states-assume-role-policy (expand)" -> "[root] data.aws_region.current (expand)"
		"[root] data.aws_iam_role.ctr_trigger (expand)" -> "[root] aws_iam_role.ctr_trigger (expand)"
		"[root] data.aws_iam_role.execute_transcription_state_machine (expand)" -> "[root] aws_iam_role.execute_transcription_state_machine (expand)"
		"[root] data.aws_iam_role.get_transcribe_job_status (expand)" -> "[root] aws_iam_role.get_transcribe_job_status (expand)"
		"[root] data.aws_iam_role.lambda_basic_exec (expand)" -> "[root] aws_iam_role.lambda_basic_exec (expand)"
		"[root] data.aws_iam_role.lambda_basic_exec_s3read (expand)" -> "[root] aws_iam_role.lambda_basic_exec_s3read (expand)"
		"[root] data.aws_iam_role.process_contactlens (expand)" -> "[root] aws_iam_role.process_contactlens (expand)"
		"[root] data.aws_iam_role.process_transcription_result (expand)" -> "[root] aws_iam_role.process_transcription_result (expand)"
		"[root] data.aws_iam_role.realtime_queue_metrics (expand)" -> "[root] aws_iam_role.realtime_queue_metrics (expand)"
		"[root] data.aws_iam_role.realtime_queue_metrics_cron_execution (expand)" -> "[root] aws_iam_role.realtime_queue_metrics_cron_execution (expand)"
		"[root] data.aws_iam_role.realtime_queue_metrics_loop_job (expand)" -> "[root] aws_iam_role.realtime_queue_metrics_loop_job (expand)"
		"[root] data.aws_iam_role.realtime_queue_metrics_loop_job_state_machine (expand)" -> "[root] aws_iam_role.realtime_queue_metrics_loop_job_state_machine (expand)"
		"[root] data.aws_iam_role.submit_transcribe_job (expand)" -> "[root] aws_iam_role.submit_transcribe_job (expand)"
		"[root] data.aws_iam_role.transcribe_state_machine (expand)" -> "[root] aws_iam_role.transcribe_state_machine (expand)"
		"[root] data.aws_lambda_function.contacttrace_record_lambda (expand)" -> "[root] aws_lambda_function.contacttrace_record_lambda (expand)"
		"[root] data.aws_lambda_function.execute_transcription_state_machine_lambda (expand)" -> "[root] aws_lambda_function.execute_transcription_state_machine_lambda (expand)"
		"[root] data.aws_lambda_function.generate_audio_recording_streaming_url_lambda (expand)" -> "[root] aws_lambda_function.generate_audio_recording_streaming_url_lambda (expand)"
		"[root] data.aws_lambda_function.get_transcibe_job_status_lambda (expand)" -> "[root] aws_lambda_function.get_transcibe_job_status_lambda (expand)"
		"[root] data.aws_lambda_function.invoke_api_lambda (expand)" -> "[root] aws_lambda_function.invoke_api_lambda (expand)"
		"[root] data.aws_lambda_function.process_transcription_result_lambda (expand)" -> "[root] aws_lambda_function.process_transcription_result_lambda (expand)"
		"[root] data.aws_lambda_function.realtime_queue_metrics_lambda (expand)" -> "[root] aws_lambda_function.realtime_queue_metrics_lambda (expand)"
		"[root] data.aws_lambda_function.realtime_queue_metrics_loop_job_lambda (expand)" -> "[root] aws_lambda_function.realtime_queue_metrics_loop_job_lambda (expand)"
		"[root] data.aws_lambda_function.submit_transcibe_job_lambda (expand)" -> "[root] aws_lambda_function.submit_transcibe_job_lambda (expand)"
		"[root] data.aws_region.current (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] data.aws_sfn_state_machine.realtime_queue_metrics_loop_job_state_machine (expand)" -> "[root] aws_sfn_state_machine.realtime_queue_metrics_loop_job_state_machine (expand)"
		"[root] data.aws_sfn_state_machine.transcribe_state_machine (expand)" -> "[root] aws_sfn_state_machine.transcribe_state_machine (expand)"
		"[root] local.CTREventSourceMappingCondition (expand)" -> "[root] local.PostcallCTRImportEnabledCondition (expand)"
		"[root] local.CTREventSourceMappingCondition (expand)" -> "[root] local.PostcallRecordingImportEnabledCondition (expand)"
		"[root] local.CTREventSourceMappingCondition (expand)" -> "[root] local.PostcallTranscribeEnabledCondition (expand)"
		"[root] local.CloudFront_Distribution_Domain_Name (expand)" -> "[root] data.aws_cloudfront_distribution.audio_recording_streaming_distribution (expand)"
		"[root] local.ContactLensImportEnabledCondition (expand)" -> "[root] var.ContactLensImportEnabled"
		"[root] local.HistoricalReportingImportEnabledCondition (expand)" -> "[root] var.HistoricalReportingImportEnabled"
		"[root] local.LambdaSecurityGroupIds (expand)" -> "[root] local.PrivateVpcEnabledCondition (expand)"
		"[root] local.LambdaSecurityGroupIds (expand)" -> "[root] var.VpcSecurityGroupList"
		"[root] local.LambdaSubnetIds (expand)" -> "[root] local.PrivateVpcEnabledCondition (expand)"
		"[root] local.LambdaSubnetIds (expand)" -> "[root] var.VpcSubnetList"
		"[root] local.Managed_Policies_Based_on_VPC (expand)" -> "[root] data.aws_iam_policy.cloud_watch_policy (expand)"
		"[root] local.Managed_Policies_Based_on_VPC (expand)" -> "[root] data.aws_iam_policy.kms_policy (expand)"
		"[root] local.Managed_Policies_Based_on_VPC (expand)" -> "[root] data.aws_iam_policy.secretsmanager_policy (expand)"
		"[root] local.Managed_Policies_Based_on_VPC (expand)" -> "[root] data.aws_iam_policy.vpc_policy (expand)"
		"[root] local.PostcallCTRImportEnabledCondition (expand)" -> "[root] var.PostcallCTRImportEnabled"
		"[root] local.PostcallRecordingImportEnabledCondition (expand)" -> "[root] var.PostcallRecordingImportEnabled"
		"[root] local.PostcallTranscribeEnabledCondition (expand)" -> "[root] var.PostcallTranscribeEnabled"
		"[root] local.PostcallTranscribeRecordingImportEnabledCondition (expand)" -> "[root] local.PostcallRecordingImportEnabledCondition (expand)"
		"[root] local.PostcallTranscribeRecordingImportEnabledCondition (expand)" -> "[root] local.PostcallTranscribeEnabledCondition (expand)"
		"[root] local.PrivateVpcEnabledCondition (expand)" -> "[root] var.PrivateVpcEnabled"
		"[root] local.RealtimeReportingImportEnabledCondition (expand)" -> "[root] var.RealtimeReportingImportEnabled"
		"[root] local.lambda_site_packages_layer_zip_name (expand)" -> "[root] local.build_directory_path (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_cloudwatch_event_target.step-function-state-machine (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_iam_policy.invoke_generate_audio_recording_streaming_url_policy (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_iam_role_policy.ctr_trigger_kinesis_policy (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_iam_role_policy.ctr_trigger_lambda_policy (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_iam_role_policy.execute_transcription_state_machine_invoke_api_policy (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_iam_role_policy.execute_transcription_state_machine_lock_s3_policy (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_iam_role_policy.execute_transcription_state_machine_recording_s3_policy (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_iam_role_policy.execute_transcription_state_machine_step_function_policy (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_iam_role_policy.get_transcribe_job_status_policy (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_iam_role_policy.process_contactlens_connect_policy (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_iam_role_policy.process_contactlens_data_s3_policy (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_iam_role_policy.process_contactlens_invoke_api_policy (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_iam_role_policy.process_contactlens_recording_s3_policy (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_iam_role_policy.process_contactlens_result_s3_policy (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_iam_role_policy.process_transcription_result_comprehend_policy (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_iam_role_policy.process_transcription_result_invoke_api_policy (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_iam_role_policy.process_transcription_result_s3_policy (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_iam_role_policy.realtime_queue_metrics_connect_policy (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_iam_role_policy.realtime_queue_metrics_cron_start_step_functions_lambda_policy (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_iam_role_policy.realtime_queue_metrics_loop_job_invoke_lambda_policy (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_iam_role_policy.realtime_queue_metrics_loop_job_state_machine_policy (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_iam_role_policy.s3read_policy (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_iam_role_policy.sig4_request_to_s3_policy (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_iam_role_policy.submit_transcribe_job_connect_recording_s3_policy (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_iam_role_policy.submit_transcribe_job_output_s3_policy (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_iam_role_policy.submit_transcribe_job_policy (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_iam_role_policy.transcribe_state_machine_policy (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_lambda_event_source_mapping.ctr_event_source_mapping (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_lambda_function.interval_agent_lambda (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_lambda_function.interval_queue_lambda (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_lambda_function.process_contact_lens_lambda (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] local.LambdaSource (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] local.LambdaTimeout (expand)"
		"[root] null_resource.lambda_python_layer (expand)" -> "[root] local.lambda_site_packages_layer_path (expand)"
		"[root] null_resource.lambda_python_layer (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/null\"]"
		"[root] provider[\"registry.terraform.io/hashicorp/archive\"] (close)" -> "[root] data.archive_file.contacttrace_record_lambda_package (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/archive\"] (close)" -> "[root] data.archive_file.ctr_trigger_lambda_package (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/archive\"] (close)" -> "[root] data.archive_file.execute_transcription_state_machine_lambda_package (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/archive\"] (close)" -> "[root] data.archive_file.generate_audio_recording_streaming_url_lambda_package (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/archive\"] (close)" -> "[root] data.archive_file.get_transcibe_job_status_lambda_package (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/archive\"] (close)" -> "[root] data.archive_file.interval_agent_lambda_package (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/archive\"] (close)" -> "[root] data.archive_file.interval_queue_lambda_package (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/archive\"] (close)" -> "[root] data.archive_file.invoke_api_lambda_package (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/archive\"] (close)" -> "[root] data.archive_file.lambda_site_packages_layer_package (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/archive\"] (close)" -> "[root] data.archive_file.process_contact_lens_lambda_package (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/archive\"] (close)" -> "[root] data.archive_file.process_transcription_result_lambda_package (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/archive\"] (close)" -> "[root] data.archive_file.realtime_queue_metrics_lambda_package (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/archive\"] (close)" -> "[root] data.archive_file.realtime_queue_metrics_loop_job_lambda_package (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/archive\"] (close)" -> "[root] data.archive_file.submit_transcibe_job_lambda_package (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_cloudwatch_event_target.step-function-state-machine (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_iam_policy.invoke_generate_audio_recording_streaming_url_policy (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_iam_role_policy.ctr_trigger_kinesis_policy (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_iam_role_policy.ctr_trigger_lambda_policy (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_iam_role_policy.execute_transcription_state_machine_invoke_api_policy (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_iam_role_policy.execute_transcription_state_machine_lock_s3_policy (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_iam_role_policy.execute_transcription_state_machine_recording_s3_policy (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_iam_role_policy.execute_transcription_state_machine_step_function_policy (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_iam_role_policy.get_transcribe_job_status_policy (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_iam_role_policy.process_contactlens_connect_policy (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_iam_role_policy.process_contactlens_data_s3_policy (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_iam_role_policy.process_contactlens_invoke_api_policy (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_iam_role_policy.process_contactlens_recording_s3_policy (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_iam_role_policy.process_contactlens_result_s3_policy (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_iam_role_policy.process_transcription_result_comprehend_policy (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_iam_role_policy.process_transcription_result_invoke_api_policy (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_iam_role_policy.process_transcription_result_s3_policy (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_iam_role_policy.realtime_queue_metrics_connect_policy (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_iam_role_policy.realtime_queue_metrics_cron_start_step_functions_lambda_policy (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_iam_role_policy.realtime_queue_metrics_loop_job_invoke_lambda_policy (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_iam_role_policy.realtime_queue_metrics_loop_job_state_machine_policy (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_iam_role_policy.s3read_policy (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_iam_role_policy.sig4_request_to_s3_policy (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_iam_role_policy.submit_transcribe_job_connect_recording_s3_policy (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_iam_role_policy.submit_transcribe_job_output_s3_policy (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_iam_role_policy.submit_transcribe_job_policy (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_iam_role_policy.transcribe_state_machine_policy (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_lambda_event_source_mapping.ctr_event_source_mapping (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_lambda_function.interval_agent_lambda (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_lambda_function.interval_queue_lambda (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_lambda_function.process_contact_lens_lambda (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/null\"] (close)" -> "[root] null_resource.lambda_python_layer (expand)"
		"[root] root" -> "[root] meta.count-boundary (EachMode fixup)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/archive\"] (close)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/null\"] (close)"
	}
}

